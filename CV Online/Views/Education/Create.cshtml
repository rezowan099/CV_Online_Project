@model CV_Online.Models.Education

@{
    ViewBag.Title = "Create";
}

<h2>Add Educational Information</h2>

@*<script type="text/JavaScript">
    function EducationLevelChange() {
        var url = '@Url.Content("~/Education/GetConcentrationMajorGroups")';
 
        var ddlsource = "#EducationLevelId";
        var ddltarget = "#ConcentrationMajorGroupId";
        alert("1");
        if ($(ddlsource).val() != "") {
            alert("2" + url);
            $.ajaxSetup({ cache: false });
            $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
            //var educationLevelId = $("#ddlEducationLevel").val();
            //$.getJSON("/Education/GetConcentrationMajorGroups?id=" + educationLevelId, null, function (data) {
                alert("3");
                $(ddltarget).empty();
 
                $("#ConcentrationMajorGroupId").append("<option  value=''>Choose...</option>");
 
                $.each(data, function (index, optionData) {
                    $("#ConcentrationMajorGroupId").append("<option value='" + optionData.Value + "'>" + optionData.Text + "</option>");
                });
            });
        }
        else {
            $("#ConcentrationMajorGroupId").empty();
            $("#ConcentrationMajorGroupId").append("<option value=''>Choose...</option>");
        }
    }
</script>*@

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Education</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.EducationLevelId, "EducationLevel")
        </div>
        <div class="editor-field">
            @Html.DropDownList("EducationLevelId", "--Select--")
           @* @Html.DropDownList("ddlEducationLevel", 
            ViewBag.EducationLevelId as SelectList, "Choose...", new { onchange = "EducationLevelChange();" })
            @Html.ValidationMessageFor(model => model.EducationLevelId)*@
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.ConcentrationMajorGroupId, "ConcentrationMajorGroup")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ConcentrationMajorGroupId", "--Select--")
            @Html.ValidationMessageFor(model => model.ConcentrationMajorGroupId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InstitutionId, "Institution")
        </div>
        <div class="editor-field">
            @Html.DropDownList("InstitutionId", "--Select--")
            @Html.ValidationMessageFor(model => model.InstitutionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExamDegreeTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExamDegreeTitle)
            @Html.ValidationMessageFor(model => model.ExamDegreeTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Result)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Result)
            @Html.ValidationMessageFor(model => model.Result)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Scale)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Scale)
            @Html.ValidationMessageFor(model => model.Scale)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.YearOfPassing)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.YearOfPassing)
            @Html.ValidationMessageFor(model => model.YearOfPassing)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Duration)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Achievement)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Achievement)
            @Html.ValidationMessageFor(model => model.Achievement)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
